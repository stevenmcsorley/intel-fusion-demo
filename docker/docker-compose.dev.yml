version: '3.8'

services:
  # PostgreSQL with PostGIS and pgvector extensions
  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: intel-fusion-postgres
    environment:
      POSTGRES_DB: intel_fusion
      POSTGRES_USER: fusion_user
      POSTGRES_PASSWORD: fusion_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fusion_user -d intel_fusion"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - intel-fusion-net

  # Redis for caching and Bull queue
  redis:
    image: redis:7-alpine
    container_name: intel-fusion-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - intel-fusion-net

  # Backend API
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
      no_cache: true
    container_name: intel-fusion-backend
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: fusion_user
      DATABASE_PASSWORD: fusion_password
      DATABASE_NAME: intel_fusion
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FRONTEND_URL: http://localhost:5173
      ENABLE_AUTO_INGESTION: false
    ports:
      - "3001:3001"
    volumes:
      - ../backend:/app
      - ../shared:/shared
      - /app/node_modules
      - /shared/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - intel-fusion-net
    command: npm run dev

  # Frontend (Vite dev server)
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
      no_cache: true
    container_name: intel-fusion-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
      VITE_MAPBOX_TOKEN: pk.eyJ1Ijoic3RldmVubWNzb3JsZXk3MiIsImEiOiJjbGdzcG5yNXUwM29wM2ZvNWt6cnhxd2FpIn0.koPh2RBGfMkKBaRJnGY0Qg
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      - ../shared:/shared
      - /app/node_modules
      - /shared/node_modules
    networks:
      - intel-fusion-net
    command: npm run dev

  # MinIO for object storage (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: intel-fusion-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - intel-fusion-net

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  intel-fusion-net:
    driver: bridge